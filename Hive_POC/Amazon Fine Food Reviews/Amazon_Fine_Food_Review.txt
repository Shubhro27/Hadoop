# STEP1 ##############################################################################
CREATE DATABASE sb_amazon_food_review_db;

USE sb_amazon_food_review_db;

//Id INT,ProductId STRING STRING,UserId STRING,ProfileName STRING,HelpfulnessNumerator INT,HelpfulnessDenominator INT,Score INT,Time TIMESTAMP,Summary STRING, Text STRING)
create EXTERNAL TABLE IF NOT EXISTS amazon_food_review_table (Id INT, ProductId STRING, UserId STRING, ProfileName STRING, HelpfulnessNumerator INT, HelpfulnessDenominator INT,Score INT, Time TIMESTAMP, Summary STRING, Text STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'      
STORED AS TEXTFILE
tblproperties ("skip.header.line.count"="1");

LOAD DATA INPATH 'sb_amazon_food_reviews/Reviews.csv' OVERWRITE INTO TABLE amazon_food_review_table;

DESCRIBE amazon_food_review_table;  //all fields are STRING due to csv processing
id                      string                  from deserializer   
productid               string                  from deserializer   
userid                  string                  from deserializer   
profilename             string                  from deserializer   
helpfulnessnumerator    string                  from deserializer   
helpfulnessdenominator  string                  from deserializer   
score                   string                  from deserializer   
time                    string                  from deserializer   
summary                 string                  from deserializer   
text                    string                  from deserializer   

SELECT Text FROM amazon_food_review_table LIMIT 10;

# STEP2 ##############################################################################
create EXTERNAL TABLE IF NOT EXISTS amazon_fine_food_table (Id INT, ProductId STRING, UserId STRING, HelpfulnessNumerator INT, HelpfulnessDenominator INT,Score INT, Time STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','     
STORED AS TEXTFILE;

INSERT OVERWRITE TABLE amazon_fine_food_table 
SELECT CAST(Id as INT),ProductId,UserId,CAST(HelpfulnessNumerator AS INT),CAST(HelpfulnessDenominator AS INT),CAST(Score AS INT),FROM_UNIXTIME(CAST(Time AS BIGINT)) FROM amazon_food_review_table; 

hive (sb_amazon_food_review_db)> DESCRIBE amazon_fine_food_table;
OK
id                      int                                         
productid               string                                      
userid                  string                                      
helpfulnessnumerator    int                                         
helpfulnessdenominator  int                                         
score                   int                                         
time                    string 

# STEP3 ##############################################################################
1. Which are the top 10 Product IDs that get reviewed the most? 

INSERT OVERWRITE DIRECTORY '/apps/hive/warehouse/sb_amazon_food_review_db.db/CASE1'
SELECT ProductId,count(*) as review_count FROM amazon_fine_food_table WHERE ProductId IS NOT NULL GROUP BY ProductId ORDER BY review_count DESC LIMIT 10;

B007JFMH8M      913
B002QWP8H0      632
B0026RQTGE      632
B002QWP89S      632
B002QWHJOU      632
B003B3OOPA      623
B001EO5Q64      567
B007M83302      564
B0026KPDG8      564
B000VK8AVK      564

2. Which are the top 10 most favorably reviewed Product IDs?

INSERT OVERWRITE DIRECTORY '/apps/hive/warehouse/sb_amazon_food_review_db.db/CASE2'
SELECT ProductId,count(*) as score_count FROM amazon_fine_food_table 
WHERE ProductId IS NOT NULL
AND Score = 5
GROUP BY ProductId 
ORDER BY score_count DESC
LIMIT 10;

B007JFMH8M      624
B003B3OOPA      517
B000NMJWZO      502
B002QWHJOU      498
B0026RQTGE      498
B002QWP89S      498
B002QWP8H0      498
B001EO5Q64      474
B000VK8AVK      369
B001RVFEP2      369

3. How may product reviews are generated on a daily, monthly and yearly basis?

--daily
CREATE TABLE IF NOT EXISTS daily_reviews_data (completeTime STRING, num_of_reviews INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';

INSERT OVERWRITE TABLE daily_reviews_data
SELECT Time, count(*) as daily_rep FROM amazon_fine_food_table 
WHERE Time IS NOT NULL
GROUP BY Time;

INSERT OVERWRITE DIRECTORY '/apps/hive/warehouse/sb_amazon_food_review_db.db/CASE3/DAILY' SELECT ROUND(AVG(num_of_reviews)) FROM daily_reviews_data;

--year
CREATE TABLE IF NOT EXISTS yearly_reviews_data (yearTime STRING, num_of_reviews INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';

INSERT OVERWRITE TABLE yearly_reviews_data
SELECT YEAR(Time), count(*) as daily_rep FROM amazon_fine_food_table 
WHERE Time IS NOT NULL
GROUP BY YEAR(Time);

INSERT OVERWRITE DIRECTORY '/apps/hive/warehouse/sb_amazon_food_review_db.db/CASE3/YEARLY' SELECT ROUND(AVG(num_of_reviews)) FROM yearly_reviews_data;

--monthly
CREATE TABLE IF NOT EXISTS monthly_reviews_data (monthTime STRING, num_of_reviews INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';

INSERT OVERWRITE TABLE monthly_reviews_data
SELECT date_format(Time,'yyyyMM'), COUNT(*) FROM amazon_fine_food_table 
WHERE Time IS NOT NULL
GROUP BY date_format(Time,'yyyyMM');

INSERT OVERWRITE DIRECTORY '/apps/hive/warehouse/sb_amazon_food_review_db.db/CASE3/MONTHLY' SELECT ROUND(AVG(num_of_reviews)) FROM monthly_reviews_data;



4. Product sales- festival mapping. By festival mapping we are trying to analyze the top 3 Product IDs that get reviewed the most for each of
   the major festivals in the USA.
   
CREATE TABLE IF NOT EXISTS american_holidays (holiday_name STRING, holiday_date STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ':';

LOAD DATA INPATH 'sb_amazon_food_reviews/american_holiday_list.txt' OVERWRITE INTO TABLE american_holidays;

CREATE TABLE IF NOT EXISTS festival_reviews (ProductId STRING,date_yr STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n';

INSERT OVERWRITE TABLE festival_reviews
SELECT ProductId,Time FROM amazon_fine_food_table AFFT JOIN american_holidays AH
ON (from_unixtime(unix_timestamp(AFFT.Time,'yyyy-MM-dd hh:mm:ss'),'MM-dd') = AH.holiday_date);

INSERT OVERWRITE DIRECTORY '/apps/hive/warehouse/sb_amazon_food_review_db.db/CASE4'
SELECT ProductId, count(*) as review_count FROM festival_reviews 
WHERE ProductId IS NOT NULL
GROUP BY ProductId
ORDER BY review_count DESC
LIMIT 3;

OK
B001OCKIP0      33
B001EQ55RW      18
B005HG9ERW      10